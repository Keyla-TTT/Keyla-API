name: Semantic Release

on:
  push:
    branches:
      - release
      - hotfix/*

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      - uses: sbt/setup-sbt@v1

      - name: Cache sbt
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt-

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: sbt/setup-sbt@v1

      - name: Restore sbt cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt-

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'sbt'

      - name: Generate documentation
        run: sbt doc

      - name: Copy docs to flat structure
        run: |
          mkdir -p docs-to-deploy
          cp -r target/scala-*/api/* docs-to-deploy/
          ls -la docs-to-deploy/

      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: api-documentation
          path: docs-to-deploy

  deploy-docs:
    needs: docs
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download documentation
        uses: actions/download-artifact@v4
        with:
          name: api-documentation
          path: ./docs

      - name: List downloaded files (debug)
        run: |
          echo "Contents of ./docs:"
          find ./docs -type f | head -20
          echo "Looking for index.html:"
          find ./docs -name "index.html"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ deploy-docs ]
    steps:
      - uses: actions/checkout@v4
      - uses: sbt/setup-sbt@v1

      - name: Restore sbt cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'sbt'

      - name: Build Universal Package
        run: sbt Universal/packageBin

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Semantic Release
        run: npm install semantic-release @semantic-release/git @semantic-release/github @semantic-release/commit-analyzer @semantic-release/release-notes-generator

      - name: Create release assets folder
        run: mkdir -p release-assets

      - name: Copy Universal package to release assets
        run: cp target/universal/*.zip release-assets/

      - name: Create semantic-release config
        run: |
          cat > .releaserc.json << EOF
          {
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              ["@semantic-release/github", {
                "assets": [
                  {"path": "release-assets/*.zip", "label": "Universal Package"}
                ]
              }],
              "@semantic-release/git"
            ]
          }
          EOF

      - name: Run Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
